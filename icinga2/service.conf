object Host "proxmox-host.domain.example" {
  import "generic-host"

  address = "192.168.42.42"

  // *** API configuration ***
  vars.pve_host = name
  // if your icinga host don't trust your pve certificate, you'll have to uncomment this line
  // vars.pve_insecure_connection = true
  vars.pve_user = "monitor@pve"
  vars.pve_password = "SuperSecretPassw0rd"
  vars.pve_node = "proxmox-host"

  // change to false, if proxmox is not a clustermember
  vars.pve_cluster = true

  // *** Service tresholds and configuration
  vars.pve_storage["flashpool"] = {
    pve_unit = "%"
    pve_warning = 80
    pve_critical = 90
  }
  vars.pve_storage["diskpool"] = {
    pve_unit = "%"
    pve_warning = 80
    pve_critical = 90
  }
}

template Service "pve-service" {
  import "generic-service"
  check_command = "pve"
}

apply Service "cluster" {
  import "pve-service"

  vars.pve_mode = "cluster"

  assign where host.vars.pve_host && host.vars.pve_cluster
}

apply Service "updates" {
  import "pve-service"

  check_interval = 12h
  retry_interval = 2h
  max_check_attempts = 3

  vars.pve_mode = "updates"

  assign where host.vars.pve_host
}

apply Service "io_wait" {
  import "pve-service"

  vars.pve_mode = "io_wait"

  vars.pve_warning = 10
  vars.pve_critical = 30

  assign where host.vars.pve_host
}

apply Service "cpu" {
  import "pve-service"

  vars.pve_mode = "cpu"

  vars.pve_warning = 70
  vars.pve_critical = 90

  assign where host.vars.pve_host
}

apply Service "memory" {
  import "pve-service"

  vars.pve_mode = "memory"

  vars.pve_unit = "%"
  vars.pve_warning = 80
  vars.pve_critical = 90

  assign where host.vars.pve_host
}

apply Service "storage-" for (storage => config in host.vars.pve_storage) {
  import "pve-service"

  vars += config

  vars.pve_mode = "storage"
  vars.pve_storage_name = storage
}
